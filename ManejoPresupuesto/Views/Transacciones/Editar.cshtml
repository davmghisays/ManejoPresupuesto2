@model TransaccionActualizacionViewModel

@{
    ViewData["Title"] = "Editar Transacción";
    /*Este linkCancelar se usa para que elija á donde redirigir cuando se le de cancelar.
     * Si Model.UrlRetorno es nulo, entonces envía a la vista Index.
     */
    var linkCancelar = Model.UrlRetorno ?? Url.Action("Index");

}


<h1>Editar Transacción</h1>

<form asp-action="Editar">

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="UrlRetorno" />
    <input type="hidden" asp-for="MontoAnterior" />
    <input type="hidden" asp-for="CuentaAnteriorId" />

    <div class="mb-3">
        <label asp-for="FechaTransaccion" class="form-label"></label>
        <input asp-for="FechaTransaccion" class="form-control" />
        <span asp-validation-for="FechaTransaccion" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="CuentaId" class="form-label"></label>
        <select asp-for="CuentaId" asp-items="Model.Cuentas" class="form-select"></select>
        <span asp-validation-for="CuentaId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="TipoOperacionId" class="form-label"></label>
        <select asp-for="TipoOperacionId" asp-items="Html.GetEnumSelectList<TipoOperacion>()" class="form-select"></select>
        <span asp-validation-for="TipoOperacionId" class="text-danger"></span>
    </div>

        <div class="mb-3">
        <label asp-for="CategoriaId" class="form-label"></label>
        <select asp-for="CategoriaId" asp-items="Model.Categorias"  class="form-select" ></select>
        <span asp-validation-for="CategoriaId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Monto" class="form-label"></label>
        <input asp-for="Monto" class="form-control" />
        <span asp-validation-for="Monto" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Nota" class="form-label"></label>
        <textarea asp-for="Nota" class="form-control"></textarea>
        <span asp-validation-for="Nota" class="text-danger"></span>
    </div>

    <button class="btn-primary btn" type="submit">Actualizar</button>
    <!--Dado que quiero usar dos Post en un mismo formulario, puedo hacerlo a través de agregar un botón
        más, y enviarlo al asp-action que yo desee. En este caso, el de borrado jeje -->
    <button class="btn btn-danger" asp-action="Borrar">Eliminar</button>
    <!-- Aqui en lugar del asp-action se usa href porque tengo una variable que lo alberga. -->
    <a class="btn-secondary btn" href="@linkCancelar">Cancelar</a>

</form>

@section Scripts{

    <partial name="_ValidationScriptsPartial" />
    <!-- No olvidar cargar el script que se va a utilizar  -->
    <script src="~/js/FormularioTransacciones.js" asp-append-version = "true" ></script>

    <script>

        /*se crea una variable que contiene el enrutamiento a la acción a la que debe enviar el
          fetch JS. En este caso es a la acción ObtenerCategorias en el Controlador*/  
        const urlObtenerCategorias = '@Url.Action("ObtenerCategorias")';

        /*Aqui inicia la función*/

        $(function(){
            /*Esta función se pasó a la ruta wwwroot>js>FormularioTransacciones.js
                Es la manera adecuada de centralizarla si se usare en varios lugares a la vez.
            */
            inicializarFormulariotransacciones(urlObtenerCategorias);
        })



    </script>
}